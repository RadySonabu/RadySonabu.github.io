{"version":3,"sources":["components/Modal.js","components/Navbar.js","components/Cards.js","components/Skills.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","useState","modalStyle","open","setOpen","body","style","className","id","Button","color","onClick","Modal","onClose","aria-labelledby","aria-describedby","root","flexGrow","menuButton","marginRight","title","NavigationBar","AppBar","red","Toolbar","IconButton","edge","aria-label","Typography","variant","href","target","maxWidth","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","RecipeReviewCard","name","Card","CardHeader","CardMedia","image","CardContent","component","Skills","Grid","xs","container","direction","justify","Content","Container","alignItems","App","Fragment","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b1775762.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: '#ffbeee',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">My resume</h2>\r\n      <p id=\"simple-modal-description\">\r\n        This is my resume\r\n      </p>\r\n      <SimpleModal />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button style={{ color: \"white\" }}  onClick={handleOpen}>\r\n        Resume\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SimpleModal from './Modal';\r\n\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedIn from '@material-ui/icons/LinkedIn';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ boxShadow: 0, color: red, backgroundColor: '#000000'}}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Ardy Ubanos\r\n          </Typography>\r\n          <Button color=\"inherit\"><SimpleModal /></Button>\r\n          <Button color=\"inherit\"  href='https://github.com/RadySonabu/' target='blank'><GitHubIcon/></Button>\r\n          <Button color=\"inherit\" href='https://www.linkedin.com/in/ardy-ubanos-5050881a9/' target='blank'><LinkedIn/></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard({name}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        \r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {name}  \r\n        </Typography>\r\n      </CardContent>\r\n      \r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport RecipeReviewCard from './Cards'\r\n\r\nfunction Skills() {\r\n    return (\r\n        <div>\r\n            \r\n            <Grid xs=\"12\" container direction=\"row\" justify=\"space-around\">\r\n                <Grid xs=\"2\">\r\n                <RecipeReviewCard name={\"Backend Development\"}></RecipeReviewCard>\r\n                </Grid>\r\n                <Grid xs=\"2\">\r\n                <RecipeReviewCard name={\"Frontend Development\"}></RecipeReviewCard>\r\n                </Grid>\r\n                <Grid xs=\"2\">\r\n                <RecipeReviewCard name={\"Database Management\"}></RecipeReviewCard>\r\n                </Grid>\r\n                <Grid xs=\"2\">\r\n                <RecipeReviewCard name={\"DevOps\"}></RecipeReviewCard>\r\n                </Grid>\r\n                <Grid xs=\"2\">\r\n                <RecipeReviewCard name={\"Agile Development\"}></RecipeReviewCard>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Skills from './Skills';\r\n// import SimpleCard from './Cards';\r\n\r\nfunction Content() {\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"sm\" style={{ padding: 20}}>\r\n                {/* <SimpleCard /> */}\r\n                <Grid xs=\"12\">\r\n                    <Grid xs=\"12\">\r\n                        <Typography variant=\"h1\">\r\n                            Hello.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid xs=\"12\">\r\n                        <Typography variant=\"h3\">\r\n                            I'm a Software Developer\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid xs=\"12\" container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                        alignItems=\"flex-end\">\r\n                        \r\n                        <Typography variant=\"h5\">\r\n                            who have skills in\r\n                        </Typography>\r\n                        \r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </Container>\r\n            <Container xs=\"l\">\r\n                <Skills />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react';\nimport NavigationBar from './components/Navbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Content from './components/Content';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavigationBar/>\n      <Container maxWidth=\"m\">\n        <Content />\n      </Container>\n    </React.Fragment>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}